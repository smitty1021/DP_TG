"""Initial migration

Revision ID: ba955fe767a2
Revises: 
Create Date: 2025-07-06 18:04:50.031398

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ba955fe767a2'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('account_setting',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('setting_name', sa.String(length=100), nullable=False),
    sa.Column('value_str', sa.String(length=255), nullable=True),
    sa.Column('value_int', sa.Integer(), nullable=True),
    sa.Column('value_float', sa.Float(), nullable=True),
    sa.Column('value_bool', sa.Boolean(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('setting_name')
    )
    op.create_table('instrument',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('symbol', sa.String(length=20), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('exchange', sa.String(length=50), nullable=True),
    sa.Column('asset_class', sa.String(length=50), nullable=True),
    sa.Column('product_group', sa.String(length=50), nullable=True),
    sa.Column('point_value', sa.Float(), nullable=False),
    sa.Column('tick_size', sa.Float(), nullable=True),
    sa.Column('currency', sa.String(length=10), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('instrument', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_instrument_asset_class'), ['asset_class'], unique=False)
        batch_op.create_index(batch_op.f('ix_instrument_is_active'), ['is_active'], unique=False)
        batch_op.create_index(batch_op.f('ix_instrument_symbol'), ['symbol'], unique=True)

    op.create_table('news_event_item',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('default_release_time', sa.Time(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('p12_scenario',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('scenario_number', sa.String(length=5), nullable=False),
    sa.Column('scenario_name', sa.String(length=100), nullable=False),
    sa.Column('short_description', sa.String(length=200), nullable=False),
    sa.Column('detailed_description', sa.Text(), nullable=False),
    sa.Column('hod_lod_implication', sa.Text(), nullable=False),
    sa.Column('directional_bias', sa.String(length=50), nullable=True),
    sa.Column('alert_criteria', sa.Text(), nullable=False),
    sa.Column('confirmation_criteria', sa.Text(), nullable=False),
    sa.Column('entry_strategy', sa.Text(), nullable=False),
    sa.Column('typical_targets', sa.Text(), nullable=True),
    sa.Column('stop_loss_guidance', sa.Text(), nullable=True),
    sa.Column('risk_percentage', sa.Float(), nullable=True),
    sa.Column('image_filename', sa.String(length=255), nullable=True),
    sa.Column('image_path', sa.String(length=500), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_date', sa.DateTime(), nullable=False),
    sa.Column('updated_date', sa.DateTime(), nullable=False),
    sa.Column('models_to_activate', sa.JSON(), nullable=True),
    sa.Column('models_to_avoid', sa.JSON(), nullable=True),
    sa.Column('risk_guidance', sa.Text(), nullable=True),
    sa.Column('preferred_timeframes', sa.JSON(), nullable=True),
    sa.Column('key_considerations', sa.Text(), nullable=True),
    sa.Column('times_selected', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('scenario_name'),
    sa.UniqueConstraint('scenario_number')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=256), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('role', sa.Enum('USER', 'EDITOR', 'ADMIN', name='userrole'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('profile_picture', sa.String(length=200), nullable=True),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('is_email_verified', sa.Boolean(), server_default='0', nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_user_username'), ['username'], unique=True)

    op.create_table('activity',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('action', sa.String(length=50), nullable=False),
    sa.Column('details', sa.Text(), nullable=True),
    sa.Column('ip_address', sa.String(length=50), nullable=True),
    sa.Column('user_agent', sa.String(length=255), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('resource_id', sa.Integer(), nullable=True),
    sa.Column('resource_type', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='fk_activity_user'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('activity', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_activity_action'), ['action'], unique=False)
        batch_op.create_index(batch_op.f('ix_activity_timestamp'), ['timestamp'], unique=False)
        batch_op.create_index(batch_op.f('ix_activity_user_id'), ['user_id'], unique=False)

    op.create_table('api_key',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('key', sa.String(length=64), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('last_used_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('permissions', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='fk_apikey_user'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('api_key', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_api_key_key'), ['key'], unique=True)
        batch_op.create_index(batch_op.f('ix_api_key_user_id'), ['user_id'], unique=False)

    op.create_table('daily_journal',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('journal_date', sa.Date(), nullable=False),
    sa.Column('key_events_today', sa.Text(), nullable=True),
    sa.Column('key_tasks_today', sa.Text(), nullable=True),
    sa.Column('on_my_mind', sa.Text(), nullable=True),
    sa.Column('important_focus_today', sa.Text(), nullable=True),
    sa.Column('mental_feeling_rating', sa.Integer(), nullable=True),
    sa.Column('mental_mind_rating', sa.Integer(), nullable=True),
    sa.Column('mental_energy_rating', sa.Integer(), nullable=True),
    sa.Column('mental_motivation_rating', sa.Integer(), nullable=True),
    sa.Column('p12_scenario_selected', sa.String(length=10), nullable=True),
    sa.Column('p12_expected_outcomes', sa.Text(), nullable=True),
    sa.Column('p12_scenario_id', sa.Integer(), nullable=True),
    sa.Column('p12_high', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('p12_mid', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('p12_low', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('p12_notes', sa.Text(), nullable=True),
    sa.Column('asia_direction', sa.String(length=10), nullable=True),
    sa.Column('asia_session_status', sa.String(length=10), nullable=True),
    sa.Column('asia_model_status', sa.String(length=10), nullable=True),
    sa.Column('asia_actual_range_points', sa.Float(), nullable=True),
    sa.Column('asia_actual_range_percentage', sa.Float(), nullable=True),
    sa.Column('asia_median_range_input_note', sa.Text(), nullable=True),
    sa.Column('london_direction', sa.String(length=10), nullable=True),
    sa.Column('london_session_status', sa.String(length=10), nullable=True),
    sa.Column('london_model_status', sa.String(length=10), nullable=True),
    sa.Column('london_actual_range_points', sa.Float(), nullable=True),
    sa.Column('london_actual_range_percentage', sa.Float(), nullable=True),
    sa.Column('london_median_range_input_note', sa.Text(), nullable=True),
    sa.Column('ny1_direction', sa.String(length=10), nullable=True),
    sa.Column('ny1_session_status', sa.String(length=10), nullable=True),
    sa.Column('ny1_model_status', sa.String(length=10), nullable=True),
    sa.Column('ny1_actual_range_points', sa.Float(), nullable=True),
    sa.Column('ny1_actual_range_percentage', sa.Float(), nullable=True),
    sa.Column('ny1_median_range_input_note', sa.Text(), nullable=True),
    sa.Column('ny2_direction', sa.String(length=10), nullable=True),
    sa.Column('ny2_session_status', sa.String(length=10), nullable=True),
    sa.Column('ny2_model_status', sa.String(length=10), nullable=True),
    sa.Column('ny2_actual_range_points', sa.Float(), nullable=True),
    sa.Column('ny2_actual_range_percentage', sa.Float(), nullable=True),
    sa.Column('ny2_median_range_input_note', sa.Text(), nullable=True),
    sa.Column('wg_ny1_lt_notes', sa.Text(), nullable=True),
    sa.Column('wg_ny1_lt_hod_pct_l', sa.Float(), nullable=True),
    sa.Column('wg_ny1_lt_hod_pct_h', sa.Float(), nullable=True),
    sa.Column('wg_ny1_lt_hod_ts', sa.Time(), nullable=True),
    sa.Column('wg_ny1_lt_hod_te', sa.Time(), nullable=True),
    sa.Column('adr_10_day_median_range_value', sa.Float(), nullable=True),
    sa.Column('todays_total_range_points', sa.Float(), nullable=True),
    sa.Column('todays_total_range_percentage', sa.Float(), nullable=True),
    sa.Column('realistic_expectance_notes', sa.Text(), nullable=True),
    sa.Column('engagement_structure_notes', sa.Text(), nullable=True),
    sa.Column('key_levels_notes', sa.Text(), nullable=True),
    sa.Column('pre_market_news_notes', sa.Text(), nullable=True),
    sa.Column('market_observations', sa.Text(), nullable=True),
    sa.Column('self_observations', sa.Text(), nullable=True),
    sa.Column('did_well_today', sa.Text(), nullable=True),
    sa.Column('did_not_go_well_today', sa.Text(), nullable=True),
    sa.Column('learned_today', sa.Text(), nullable=True),
    sa.Column('improve_action_next_day', sa.Text(), nullable=True),
    sa.Column('review_psych_discipline_rating', sa.Integer(), nullable=True),
    sa.Column('review_psych_motivation_rating', sa.Integer(), nullable=True),
    sa.Column('review_psych_focus_rating', sa.Integer(), nullable=True),
    sa.Column('review_psych_mastery_rating', sa.Integer(), nullable=True),
    sa.Column('review_psych_composure_rating', sa.Integer(), nullable=True),
    sa.Column('review_psych_resilience_rating', sa.Integer(), nullable=True),
    sa.Column('review_psych_mind_rating', sa.Integer(), nullable=True),
    sa.Column('review_psych_energy_rating', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['p12_scenario_id'], ['p12_scenario.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='fk_dailyjournal_user'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'journal_date', name='uq_user_daily_journal_date')
    )
    with op.batch_alter_table('daily_journal', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_daily_journal_user_id'), ['user_id'], unique=False)

    op.create_table('file',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('filepath', sa.String(length=255), nullable=False),
    sa.Column('filesize', sa.Integer(), nullable=False),
    sa.Column('file_type', sa.String(length=50), nullable=True),
    sa.Column('mime_type', sa.String(length=100), nullable=True),
    sa.Column('upload_date', sa.DateTime(), nullable=False),
    sa.Column('last_accessed', sa.DateTime(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('download_count', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='fk_file_user'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('filepath')
    )
    with op.batch_alter_table('file', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_file_upload_date'), ['upload_date'], unique=False)
        batch_op.create_index(batch_op.f('ix_file_user_id'), ['user_id'], unique=False)

    op.create_table('group',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('created_by_user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['user.id'], name='fk_group_created_by_user'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('monthly_journal',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('month', sa.Integer(), nullable=False),
    sa.Column('coach_feedback_on_month', sa.Text(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='fk_monthlyjournal_user'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'year', 'month', name='uq_user_year_month')
    )
    with op.batch_alter_table('monthly_journal', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_monthly_journal_user_id'), ['user_id'], unique=False)

    op.create_table('p12_usage_stats',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('p12_scenario_id', sa.Integer(), nullable=False),
    sa.Column('journal_date', sa.Date(), nullable=False),
    sa.Column('selection_timestamp', sa.DateTime(), nullable=False),
    sa.Column('market_session', sa.String(length=50), nullable=True),
    sa.Column('p12_high', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('p12_mid', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('p12_low', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('outcome_successful', sa.Boolean(), nullable=True),
    sa.Column('outcome_notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['p12_scenario_id'], ['p12_scenario.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('password_reset',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('token', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('used', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='fk_passwordreset_user'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('password_reset', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_password_reset_token'), ['token'], unique=True)
        batch_op.create_index(batch_op.f('ix_password_reset_user_id'), ['user_id'], unique=False)

    op.create_table('quarterly_journal',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('quarter', sa.Integer(), nullable=False),
    sa.Column('key_goals_for_quarter', sa.Text(), nullable=True),
    sa.Column('major_focus_areas_strategies', sa.Text(), nullable=True),
    sa.Column('anticipated_challenges_mitigation', sa.Text(), nullable=True),
    sa.Column('quarterly_achievements_progress', sa.Text(), nullable=True),
    sa.Column('what_went_well_quarter', sa.Text(), nullable=True),
    sa.Column('what_did_not_go_well_quarter', sa.Text(), nullable=True),
    sa.Column('key_lessons_learned_quarter', sa.Text(), nullable=True),
    sa.Column('adjustments_for_next_quarter', sa.Text(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='fk_quarterlyjournal_user'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'year', 'quarter', name='uq_user_year_quarter')
    )
    with op.batch_alter_table('quarterly_journal', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_quarterly_journal_user_id'), ['user_id'], unique=False)

    op.create_table('settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('theme', sa.String(length=20), nullable=False),
    sa.Column('notifications_enabled', sa.Boolean(), nullable=False),
    sa.Column('items_per_page', sa.Integer(), nullable=False),
    sa.Column('language', sa.String(length=10), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('custom_settings', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='fk_settings_user'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('tag',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('category', sa.Enum('SETUP_STRATEGY', 'MARKET_CONDITIONS', 'EXECUTION_MANAGEMENT', 'PSYCHOLOGICAL_EMOTIONAL', name='tagcategory'), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('is_default', sa.Boolean(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('color_category', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='fk_tag_user'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'user_id', name='uq_tag_name_user')
    )
    with op.batch_alter_table('tag', schema=None) as batch_op:
        batch_op.create_index('idx_tag_default_active', ['is_default', 'is_active'], unique=False)
        batch_op.create_index('idx_tag_user_category', ['user_id', 'category'], unique=False)

    op.create_table('trading_model',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.Column('version', sa.String(length=50), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('overview_logic', sa.Text(), nullable=True),
    sa.Column('primary_chart_tf', sa.String(length=50), nullable=True),
    sa.Column('execution_chart_tf', sa.String(length=50), nullable=True),
    sa.Column('context_chart_tf', sa.String(length=50), nullable=True),
    sa.Column('technical_indicators_used', sa.Text(), nullable=True),
    sa.Column('chart_patterns_used', sa.Text(), nullable=True),
    sa.Column('price_action_signals', sa.Text(), nullable=True),
    sa.Column('key_levels_identification', sa.Text(), nullable=True),
    sa.Column('volume_analysis_notes', sa.Text(), nullable=True),
    sa.Column('fundamental_analysis_notes', sa.Text(), nullable=True),
    sa.Column('instrument_applicability', sa.Text(), nullable=True),
    sa.Column('session_applicability', sa.Text(), nullable=True),
    sa.Column('optimal_market_conditions', sa.Text(), nullable=True),
    sa.Column('sub_optimal_market_conditions', sa.Text(), nullable=True),
    sa.Column('entry_trigger_description', sa.Text(), nullable=True),
    sa.Column('stop_loss_strategy', sa.Text(), nullable=True),
    sa.Column('take_profit_strategy', sa.Text(), nullable=True),
    sa.Column('min_risk_reward_ratio', sa.Float(), nullable=True),
    sa.Column('position_sizing_rules', sa.Text(), nullable=True),
    sa.Column('scaling_in_out_rules', sa.Text(), nullable=True),
    sa.Column('trade_management_breakeven_rules', sa.Text(), nullable=True),
    sa.Column('trade_management_trailing_stop_rules', sa.Text(), nullable=True),
    sa.Column('trade_management_partial_profit_rules', sa.Text(), nullable=True),
    sa.Column('trade_management_adverse_price_action', sa.Text(), nullable=True),
    sa.Column('model_max_loss_per_trade', sa.String(length=100), nullable=True),
    sa.Column('model_max_daily_loss', sa.String(length=100), nullable=True),
    sa.Column('model_max_weekly_loss', sa.String(length=100), nullable=True),
    sa.Column('model_consecutive_loss_limit', sa.String(length=100), nullable=True),
    sa.Column('model_action_on_max_drawdown', sa.Text(), nullable=True),
    sa.Column('pre_trade_checklist', sa.Text(), nullable=True),
    sa.Column('order_types_used', sa.Text(), nullable=True),
    sa.Column('broker_platform_notes', sa.Text(), nullable=True),
    sa.Column('execution_confirmation_notes', sa.Text(), nullable=True),
    sa.Column('post_trade_routine_model', sa.Text(), nullable=True),
    sa.Column('strengths', sa.Text(), nullable=True),
    sa.Column('weaknesses', sa.Text(), nullable=True),
    sa.Column('backtesting_forwardtesting_notes', sa.Text(), nullable=True),
    sa.Column('refinements_learnings', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('is_default', sa.Boolean(), nullable=False),
    sa.Column('created_by_admin_user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_admin_user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='fk_tradingmodel_user'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'name', name='uq_user_tradingmodel_name')
    )
    with op.batch_alter_table('trading_model', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_trading_model_user_id'), ['user_id'], unique=False)

    op.create_table('weekly_journal',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('week_number', sa.Integer(), nullable=False),
    sa.Column('weekly_improve_action_next_week', sa.Text(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='fk_weeklyjournal_user'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'year', 'week_number', name='uq_user_year_week')
    )
    with op.batch_alter_table('weekly_journal', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_weekly_journal_user_id'), ['user_id'], unique=False)

    op.create_table('yearly_journal',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('yearly_long_term_vision', sa.Text(), nullable=True),
    sa.Column('yearly_key_goals', sa.Text(), nullable=True),
    sa.Column('yearly_major_focus_areas', sa.Text(), nullable=True),
    sa.Column('yearly_coach_advice_for_year_ahead', sa.Text(), nullable=True),
    sa.Column('yearly_achievements', sa.Text(), nullable=True),
    sa.Column('yearly_challenges_overcome', sa.Text(), nullable=True),
    sa.Column('yearly_lessons_learned', sa.Text(), nullable=True),
    sa.Column('yearly_goals_for_next_year', sa.Text(), nullable=True),
    sa.Column('yearly_coach_feedback_on_year', sa.Text(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='fk_yearlyjournal_user'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'year', name='uq_user_year')
    )
    with op.batch_alter_table('yearly_journal', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_yearly_journal_user_id'), ['user_id'], unique=False)

    op.create_table('daily_journal_image',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('daily_journal_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('filepath', sa.String(length=255), nullable=False),
    sa.Column('filesize', sa.Integer(), nullable=False),
    sa.Column('mime_type', sa.String(length=100), nullable=True),
    sa.Column('upload_date', sa.DateTime(), nullable=False),
    sa.Column('image_type', sa.String(length=50), nullable=True),
    sa.Column('caption', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['daily_journal_id'], ['daily_journal.id'], name='fk_dailyjournalimage_journal'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='fk_dailyjournalimage_user'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('filepath')
    )
    with op.batch_alter_table('daily_journal_image', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_daily_journal_image_daily_journal_id'), ['daily_journal_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_daily_journal_image_user_id'), ['user_id'], unique=False)

    op.create_table('tag_usage_stats',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('usage_count', sa.Integer(), nullable=False),
    sa.Column('last_used', sa.DateTime(), nullable=True),
    sa.Column('first_used', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tag_id', 'user_id', name='unique_tag_user_usage')
    )
    op.create_table('trade',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('instrument_id', sa.Integer(), nullable=True),
    sa.Column('instrument_legacy', sa.String(length=20), nullable=True),
    sa.Column('point_value', sa.Float(), nullable=True),
    sa.Column('pnl', sa.Float(), nullable=True),
    sa.Column('trade_date', sa.Date(), nullable=False),
    sa.Column('direction', sa.String(length=5), nullable=False),
    sa.Column('initial_stop_loss', sa.Float(), nullable=True),
    sa.Column('terminus_target', sa.Float(), nullable=True),
    sa.Column('is_dca', sa.Boolean(), nullable=True),
    sa.Column('mae', sa.Float(), nullable=True),
    sa.Column('mfe', sa.Float(), nullable=True),
    sa.Column('trade_notes', sa.Text(), nullable=True),
    sa.Column('how_closed', sa.String(length=20), nullable=True),
    sa.Column('news_event', sa.String(length=100), nullable=True),
    sa.Column('rules_rating', sa.Integer(), nullable=True),
    sa.Column('management_rating', sa.Integer(), nullable=True),
    sa.Column('target_rating', sa.Integer(), nullable=True),
    sa.Column('entry_rating', sa.Integer(), nullable=True),
    sa.Column('preparation_rating', sa.Integer(), nullable=True),
    sa.Column('psych_scored_highest', sa.Text(), nullable=True),
    sa.Column('psych_scored_lowest', sa.Text(), nullable=True),
    sa.Column('overall_analysis_notes', sa.Text(), nullable=True),
    sa.Column('screenshot_link', sa.String(length=255), nullable=True),
    sa.Column('trade_management_notes', sa.Text(), nullable=True),
    sa.Column('errors_notes', sa.Text(), nullable=True),
    sa.Column('improvements_notes', sa.Text(), nullable=True),
    sa.Column('trading_model_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['instrument_id'], ['instrument.id'], name='fk_trade_instrument'),
    sa.ForeignKeyConstraint(['trading_model_id'], ['trading_model.id'], name='fk_trade_trading_model'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='fk_trade_user'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('trade', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_trade_instrument_legacy'), ['instrument_legacy'], unique=False)
        batch_op.create_index(batch_op.f('ix_trade_pnl'), ['pnl'], unique=False)
        batch_op.create_index(batch_op.f('ix_trade_user_id'), ['user_id'], unique=False)

    op.create_table('user_default_tags',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'tag_id')
    )
    op.create_table('user_group_association',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['group.id'], name='fk_user_group_assoc_group'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='fk_user_group_assoc_user'),
    sa.PrimaryKeyConstraint('user_id', 'group_id')
    )
    op.create_table('entry_point',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('entry_time', sa.Time(), nullable=False),
    sa.Column('contracts', sa.Integer(), nullable=False),
    sa.Column('entry_price', sa.Float(), nullable=False),
    sa.Column('trade_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['trade_id'], ['trade.id'], name='fk_entrypoint_trade'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('exit_point',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('exit_time', sa.Time(), nullable=True),
    sa.Column('contracts', sa.Integer(), nullable=True),
    sa.Column('exit_price', sa.Float(), nullable=True),
    sa.Column('trade_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['trade_id'], ['trade.id'], name='fk_exitpoint_trade'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('trade_image',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('trade_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('filepath', sa.String(length=255), nullable=False),
    sa.Column('filesize', sa.Integer(), nullable=False),
    sa.Column('mime_type', sa.String(length=100), nullable=True),
    sa.Column('upload_date', sa.DateTime(), nullable=False),
    sa.Column('caption', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['trade_id'], ['trade.id'], name='fk_tradeimage_trade'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='fk_tradeimage_user'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('filepath')
    )
    with op.batch_alter_table('trade_image', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_trade_image_trade_id'), ['trade_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_trade_image_user_id'), ['user_id'], unique=False)

    op.create_table('trade_tags',
    sa.Column('trade_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], ),
    sa.ForeignKeyConstraint(['trade_id'], ['trade.id'], ),
    sa.PrimaryKeyConstraint('trade_id', 'tag_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('trade_tags')
    with op.batch_alter_table('trade_image', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_trade_image_user_id'))
        batch_op.drop_index(batch_op.f('ix_trade_image_trade_id'))

    op.drop_table('trade_image')
    op.drop_table('exit_point')
    op.drop_table('entry_point')
    op.drop_table('user_group_association')
    op.drop_table('user_default_tags')
    with op.batch_alter_table('trade', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_trade_user_id'))
        batch_op.drop_index(batch_op.f('ix_trade_pnl'))
        batch_op.drop_index(batch_op.f('ix_trade_instrument_legacy'))

    op.drop_table('trade')
    op.drop_table('tag_usage_stats')
    with op.batch_alter_table('daily_journal_image', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_daily_journal_image_user_id'))
        batch_op.drop_index(batch_op.f('ix_daily_journal_image_daily_journal_id'))

    op.drop_table('daily_journal_image')
    with op.batch_alter_table('yearly_journal', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_yearly_journal_user_id'))

    op.drop_table('yearly_journal')
    with op.batch_alter_table('weekly_journal', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_weekly_journal_user_id'))

    op.drop_table('weekly_journal')
    with op.batch_alter_table('trading_model', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_trading_model_user_id'))

    op.drop_table('trading_model')
    with op.batch_alter_table('tag', schema=None) as batch_op:
        batch_op.drop_index('idx_tag_user_category')
        batch_op.drop_index('idx_tag_default_active')

    op.drop_table('tag')
    op.drop_table('settings')
    with op.batch_alter_table('quarterly_journal', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_quarterly_journal_user_id'))

    op.drop_table('quarterly_journal')
    with op.batch_alter_table('password_reset', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_password_reset_user_id'))
        batch_op.drop_index(batch_op.f('ix_password_reset_token'))

    op.drop_table('password_reset')
    op.drop_table('p12_usage_stats')
    with op.batch_alter_table('monthly_journal', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_monthly_journal_user_id'))

    op.drop_table('monthly_journal')
    op.drop_table('group')
    with op.batch_alter_table('file', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_file_user_id'))
        batch_op.drop_index(batch_op.f('ix_file_upload_date'))

    op.drop_table('file')
    with op.batch_alter_table('daily_journal', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_daily_journal_user_id'))

    op.drop_table('daily_journal')
    with op.batch_alter_table('api_key', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_api_key_user_id'))
        batch_op.drop_index(batch_op.f('ix_api_key_key'))

    op.drop_table('api_key')
    with op.batch_alter_table('activity', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_activity_user_id'))
        batch_op.drop_index(batch_op.f('ix_activity_timestamp'))
        batch_op.drop_index(batch_op.f('ix_activity_action'))

    op.drop_table('activity')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_username'))
        batch_op.drop_index(batch_op.f('ix_user_email'))

    op.drop_table('user')
    op.drop_table('p12_scenario')
    op.drop_table('news_event_item')
    with op.batch_alter_table('instrument', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_instrument_symbol'))
        batch_op.drop_index(batch_op.f('ix_instrument_is_active'))
        batch_op.drop_index(batch_op.f('ix_instrument_asset_class'))

    op.drop_table('instrument')
    op.drop_table('account_setting')
    # ### end Alembic commands ###
