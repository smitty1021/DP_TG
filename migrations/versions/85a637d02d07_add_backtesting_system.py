"""Add backtesting system

Revision ID: 85a637d02d07
Revises: ca6aa4899f81
Create Date: 2025-08-01 20:43:27.250212

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '85a637d02d07'
down_revision = 'ca6aa4899f81'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('backtest',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('trading_model_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('status', sa.Enum('DRAFT', 'RUNNING', 'COMPLETED', 'FAILED', 'CANCELLED', name='backteststatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('specific_rules_used', sa.Text(), nullable=True),
    sa.Column('entry_rules', sa.Text(), nullable=True),
    sa.Column('exit_rules', sa.Text(), nullable=True),
    sa.Column('trade_management_applied', sa.Text(), nullable=True),
    sa.Column('risk_settings', sa.Text(), nullable=True),
    sa.Column('market_conditions', sa.String(length=500), nullable=True),
    sa.Column('session_context', sa.String(length=200), nullable=True),
    sa.Column('tradingview_screenshot_links', sa.Text(), nullable=True),
    sa.Column('chart_screenshots', sa.Text(), nullable=True),
    sa.Column('total_trades', sa.Integer(), nullable=False),
    sa.Column('winning_trades', sa.Integer(), nullable=False),
    sa.Column('losing_trades', sa.Integer(), nullable=False),
    sa.Column('win_percentage', sa.Float(), nullable=True),
    sa.Column('total_pnl', sa.Float(), nullable=False),
    sa.Column('total_pnl_ticks', sa.Float(), nullable=False),
    sa.Column('average_win', sa.Float(), nullable=True),
    sa.Column('average_loss', sa.Float(), nullable=True),
    sa.Column('profit_factor', sa.Float(), nullable=True),
    sa.Column('max_drawdown', sa.Float(), nullable=True),
    sa.Column('max_drawdown_ticks', sa.Float(), nullable=True),
    sa.Column('max_runup', sa.Float(), nullable=True),
    sa.Column('max_runup_ticks', sa.Float(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['trading_model_id'], ['trading_model.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('backtest_trade',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('backtest_id', sa.Integer(), nullable=False),
    sa.Column('trade_date', sa.Date(), nullable=False),
    sa.Column('trade_time', sa.Time(), nullable=True),
    sa.Column('instrument', sa.String(length=50), nullable=False),
    sa.Column('direction', sa.String(length=10), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('entry_price', sa.Float(), nullable=False),
    sa.Column('exit_price', sa.Float(), nullable=True),
    sa.Column('stop_loss_price', sa.Float(), nullable=True),
    sa.Column('take_profit_price', sa.Float(), nullable=True),
    sa.Column('profit_loss', sa.Float(), nullable=True),
    sa.Column('profit_loss_ticks', sa.Float(), nullable=True),
    sa.Column('mae_ticks', sa.Float(), nullable=True),
    sa.Column('mfe_ticks', sa.Float(), nullable=True),
    sa.Column('duration_minutes', sa.Integer(), nullable=True),
    sa.Column('actual_exit_reason', sa.Enum('STOP_LOSS', 'TAKE_PROFIT', 'TRAILING_STOP', 'BREAKEVEN_STOP', 'MANUAL_EXIT', 'TIME_EXIT', 'MARKET_CLOSE', 'REVERSE_SIGNAL', 'PARTIAL_PROFIT', 'RISK_MANAGEMENT', 'OTHER', name='backtestexitreason'), nullable=True),
    sa.Column('exit_time', sa.Time(), nullable=True),
    sa.Column('market_conditions', sa.String(length=500), nullable=True),
    sa.Column('session_context', sa.String(length=100), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('tags', sa.Text(), nullable=True),
    sa.Column('tradingview_screenshot_links', sa.Text(), nullable=True),
    sa.Column('chart_screenshots', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['backtest_id'], ['backtest.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('backtest_trade_entry',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('backtest_trade_id', sa.Integer(), nullable=False),
    sa.Column('entry_time', sa.DateTime(), nullable=False),
    sa.Column('entry_price', sa.Float(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('entry_reason', sa.String(length=200), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['backtest_trade_id'], ['backtest_trade.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('backtest_trade_exit',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('backtest_trade_id', sa.Integer(), nullable=False),
    sa.Column('exit_time', sa.DateTime(), nullable=False),
    sa.Column('exit_price', sa.Float(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('exit_reason', sa.Enum('STOP_LOSS', 'TAKE_PROFIT', 'TRAILING_STOP', 'BREAKEVEN_STOP', 'MANUAL_EXIT', 'TIME_EXIT', 'MARKET_CLOSE', 'REVERSE_SIGNAL', 'PARTIAL_PROFIT', 'RISK_MANAGEMENT', 'OTHER', name='backtestexitreason'), nullable=False),
    sa.Column('profit_loss', sa.Float(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['backtest_trade_id'], ['backtest_trade.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('backtest_trade_exit')
    op.drop_table('backtest_trade_entry')
    op.drop_table('backtest_trade')
    op.drop_table('backtest')
    # ### end Alembic commands ###
